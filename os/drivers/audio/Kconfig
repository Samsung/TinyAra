#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

menuconfig I2S
	bool "I2S Driver Support"
	default n
	---help---
		This selection enables selection of common I2S options.  This option
		should be enabled by all platforms that support I2S interfaces.
		See include/tinyara/audio/i2s.h for further I2S driver information.

if I2S

config AUDIO_I2SCHAR
	bool "I2S character driver (for testing only)"
	default n
	depends on I2S && AUDIO
	---help---
		This selection enables a simple character driver that supports I2S
		transfers via a read() and write().  The intent of this driver is to
		support I2S testing.  It is not an audio driver but does conform to
		some of the buffer management heuristics of an audio driver.  It is
		not suitable for use in any real driver application in its current
		form.

if AUDIO_I2SCHAR

config AUDIO_I2SCHAR_RXTIMEOUT
	int "RX timeout"
	default 0
	---help---
		This is a fixed timeout value that will be used for all receiver
		transfers.  This is in units of system clock ticks (configurable).
		The special value of zero disables RX timeouts.  Default: 0

config AUDIO_I2SCHAR_TXTIMEOUT
	int "TX timeout"
	default 0
	---help---
		This is a fixed timeout value that will be used for all transmitter
		transfers.  This is in units of system clock ticks (configurable).
		The special value of zero disables RX timeouts.  Default: 0

endif # AUDIO_I2SCHAR
endif # I2S

config AUDIO_DEVICES
	bool "Support for Audio Devices"
	default n
	depends on AUDIO
	---help---
		Enables support for Audio Devices.

if AUDIO_DEVICES

config AUDIO_MULTI_SESSION
	bool "Support multiple sessions"
	default n
	---help---
		Some audio devices, such as USB attached sound cards, may support more
		than one streaming session at a time (each with one or more audio channels).
		Selecting this feature adds support for tracking multiple concurrent
		sessions with the lower-level audio devices.

menu "Audio Buffer Configuration"

config AUDIO_LARGE_BUFFERS
	bool "Support Audio Buffers with greater than 65K samples"
	default n
	---help---
		By default, the Audio Pipeline Buffers use a 16-bit max sample count, limiting
		the number of samples per buffer to 65K.  Enable this option to specify a
		32-bit max sample count for increased samples / buffer capability.
		channel capability.

config AUDIO_NUM_BUFFERS
	int "Number of buffers for audio processing"
	default 2
	---help---
		Specifies the number of buffers to allocate for audio processing.
		If Driver Specified buffer sizes is enabled (below), then the
		low-level drivers will have the opportunity to override this
		value.

config AUDIO_BUFFER_NUMBYTES
	int "Size of each audio buffer for audio processing"
	default 8192
	---help---
		Specifies the allocation size for each audio buffer
		If Driver Specified buffer sizes is enabled (below), then the
		low-level drivers will have the opportunity to override this
		value.

config AUDIO_DRIVER_SPECIFIC_BUFFERS
	bool "Support for Driver specified buffer sizes"
	default n
	---help---
		By default, the Audio system uses the same size and number of buffers
		regardless of the specific audio device in use.  Specifying 'y' here
		adds extra code which allows the lower-level audio device to specify
		a partucular size and number of buffers.

endmenu # Audio Buffer Configuration

menu "Supported Audio Formats"

config AUDIO_FORMAT_PCM
	bool "PCM Audio"
	default y
	---help---
		Build in support for PCM Audio format.

endmenu

menu "Exclude Specific Audio Features"

config AUDIO_EXCLUDE_PAUSE_RESUME
	bool "Exclude pause and resume controls"
	default n
	---help---
		Exclude building support for pausing and resuming audio files
		once they are submitted.  If the sound system is being used to play
		short system notification or error type sounds that typicaly only
		last a second or two, then there is no need (or chance) to pause or
		resume sound playback once it has started.

config AUDIO_EXCLUDE_STOP
	bool "Exclude stop playback controls"
	default n
	---help---
		Exclude building support for stopping audio files once they are
		submitted.  If the sound system is being used to play short sytem
		notification or error type sounds that typically only last a second
		or two, then there is no need (or chance) to stop the sound
		playback once it has started.

config AUDIO_EXCLUDE_FFORWARD
	bool "Exclude fast forward controls"
	default n if !AUDIO_EXCLUDE_STOP
	default y if AUDIO_EXCLUDE_STOP
	---help---
		Exclude building support for fast forwarding through audio files
		once they are submitted.  Selecting this option would only make
		if the underlying audio decoding logic is capable of sub-sampling
		in the stream of audio data.

config AUDIO_EXCLUDE_REWIND
	bool "Exclude rewind controls"
	default y
	---help---
		Rewind may be supported by some audio devices, but not the typical
		device that receives a non-seekable, stream of audio buffers.

endmenu

config AUDIO_CUSTOM_DEV_PATH
	bool "Use custom device path"
	default n
	---help---
		By default, all audio devices on the target are are registered in the
		/dev/audio directory.  Select this option to change the default location
		for the device registration.

if AUDIO_CUSTOM_DEV_PATH

config AUDIO_DEV_ROOT
	bool "Place audio devices in /dev"
	default n
	---help---
		This option causes all device entries to appear in /dev with all the
		other device entries.  This option generates the smallest code and
		RAM footprint.

if !AUDIO_DEV_ROOT

config AUDIO_DEV_PATH
	string "Base path for Audio devices"
	default "/dev/audio"
	---help---
		The path on the target where audio devices are registered.  The default
		is to place all audio devices in the /dev/audio/ directory.

endif # AUDIO_CUSTOM_DEV_PATH
endif #AUDIO_DEV_ROOT

endif # AUDIO_DEVICES
